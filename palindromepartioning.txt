bool ispalindrome(string a,int l,int h){
    while(l<=h){
        if(a[l]!=a[h]) return false;
        l++;h--;
    }
    return true;
}
    void r(vector<vector<string>> &res,string s,vector<string> &path,int ind){
        if(ind==s.size()){ res.push_back(path);return;}
        for(int i=ind;i<s.size();i++){
            if(ispalindrome(s,ind,i)){
                path.push_back(s.substr(ind,i-ind+1));
                r(res,s,path,i+1);
                path.pop_back();
            }
        }
    }
    
    vector<vector<string>> partition(string &s) {
        vector<vector<string>> res;
        vector<string> path;
        r(res,s,path,0);
        
        return res;
    }